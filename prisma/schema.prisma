// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id             String          @id @default(auto()) @map("_id") @db.ObjectId
  email          String          @unique
  name           String
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
  sheets         Sheet[]
  financialGoals FinancialGoal[]
}

model Sheet {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  title     String    @unique
  titleId   String    @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  pinned Boolean @default(false)

  transactions Transaction[]

  userId String @db.ObjectId
  user   User   @relation(fields: [userId], references: [id])
}

model Transaction {
  id                    String          @id @default(auto()) @map("_id") @db.ObjectId
  sheetId               String          @map("sheet_id") @db.ObjectId
  name                  String
  type                  TransactionType
  expenseClassification String?
  nominal               Int
  notes                 String?
  createdAt             DateTime        @default(now())
  updatedAt             DateTime        @updatedAt
  assets                Boolean
  liabilities           Boolean

  sheet Sheet @relation(fields: [sheetId], references: [id], onDelete: Cascade)

  financialGoalId String?        @db.ObjectId
  financialGoal   FinancialGoal? @relation(fields: [financialGoalId], references: [id])

  @@index([sheetId])
}

model FinancialGoal {
  id            String            @id @default(auto()) @map("_id") @db.ObjectId
  title         String
  description   String?
  type          FinancialGoalType
  targetAmount  Float
  currentAmount Float             @default(0)
  dueDate       DateTime?
  userId        String            @db.ObjectId
  user          User              @relation(fields: [userId], references: [id])
  transactions  Transaction[]
}

enum TransactionType {
  in
  out
}

enum FinancialGoalType {
  saving
  investment
  debt
}
